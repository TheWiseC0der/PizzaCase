@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}

<div class="text-center">
    <h1 class="display-4" id="response">Welcome</h1>
    <form id="pizzaOrderForm">
        <label for="pizzaType">Pizza Type:</label>
        <input type="text" id="pizzaType" name="pizzaType" /><br />

        <button type="button" onclick="orderPizza()">Order Pizza</button>
    </form>

    <form id="addIngredientForm">
        <label for="ingredient">Ingredient:</label>
        <input type="text" id="ingredient" name="ingredient" /><br />

        <button type="button" onclick="addIngredient()">Add Ingredient</button>
    </form>
    <p>Learn about <a href="https://docs.microsoft.com/aspnet/core">building Web apps with ASP.NET Core</a>.</p>
</div>


<script>
    function orderPizza() {
        // Get the pizza type from the form.
        var pizzaType = document.getElementById("pizzaType").value;

        // Send the order request to the server.
        var requestMessage = "ORDER " + pizzaType;
        sendRequest(requestMessage);
    }

    function addIngredient() {
        // Get the ingredient from the form.
        var ingredient = document.getElementById("ingredient").value;

        // Send the add ingredient request to the server.
        var requestMessage = "ADD_INGREDIENT " + ingredient;
        sendRequest(requestMessage);
    }

    function sendRequest(requestMessage) {
        const HOST = '127.0.0.1';
        const PORT = 8080;

        const socket = new WebSocket(`ws://${HOST}:${PORT}`);

        socket.addEventListener('open', () => {
            console.log(`Connected to ${HOST}:${PORT}`);
            socket.send('ORDER');
        });

        socket.addEventListener('message', (event) => {
            console.log(`Received data: ${event.data}`);
            socket.close(); // close the socket
        });

        socket.addEventListener('close', () => {
            console.log('Connection closed');
        });
    }


</script>